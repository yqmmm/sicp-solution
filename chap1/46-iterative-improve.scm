(define (iterative-improve good-enough? improve)
  (define (iter guess)
    (let ((next (improve guess)))
      (if (good-enough? guess next)
          guess
          (iter (improve guess)))))
  iter)

(define (sqrt x)
    (define dx 0.00001)
    (define (good-enough? v1 v2)
        (< (abs (- v1 v2)) dx))
    (define (improve guess)
        (average guess (/ x guess)))
    (define (average x y)
        (/ (+ x y) 2))
    ((iterative-improve good-enough? improve) 1.0))

(define (fixed-point f guess)
  (define tolerance 0.00001)
  (define (good-enough? a b)
    (< (abs (- a b)) tolerance))
  (define (improve guess)
    (f guess))
  ((iterative-improve good-enough? improve) guess))
